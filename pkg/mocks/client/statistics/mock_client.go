// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/client/statistics/client.go

// Package mock_statistics is a generated GoMock package.
package mock_statistics

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIClient is a mock of IClient interface.
type MockIClient struct {
	ctrl     *gomock.Controller
	recorder *MockIClientMockRecorder
}

// MockIClientMockRecorder is the mock recorder for MockIClient.
type MockIClientMockRecorder struct {
	mock *MockIClient
}

// NewMockIClient creates a new mock instance.
func NewMockIClient(ctrl *gomock.Controller) *MockIClient {
	mock := &MockIClient{ctrl: ctrl}
	mock.recorder = &MockIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIClient) EXPECT() *MockIClientMockRecorder {
	return m.recorder
}

// GetMostLikelyAge mocks base method.
func (m *MockIClient) GetMostLikelyAge(ctx context.Context, name string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostLikelyAge", ctx, name)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMostLikelyAge indicates an expected call of GetMostLikelyAge.
func (mr *MockIClientMockRecorder) GetMostLikelyAge(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostLikelyAge", reflect.TypeOf((*MockIClient)(nil).GetMostLikelyAge), ctx, name)
}

// GetMostLikelyGender mocks base method.
func (m *MockIClient) GetMostLikelyGender(ctx context.Context, name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostLikelyGender", ctx, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMostLikelyGender indicates an expected call of GetMostLikelyGender.
func (mr *MockIClientMockRecorder) GetMostLikelyGender(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostLikelyGender", reflect.TypeOf((*MockIClient)(nil).GetMostLikelyGender), ctx, name)
}

// GetMostLikelyNationality mocks base method.
func (m *MockIClient) GetMostLikelyNationality(ctx context.Context, name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostLikelyNationality", ctx, name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMostLikelyNationality indicates an expected call of GetMostLikelyNationality.
func (mr *MockIClientMockRecorder) GetMostLikelyNationality(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostLikelyNationality", reflect.TypeOf((*MockIClient)(nil).GetMostLikelyNationality), ctx, name)
}
