package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/romik1505/userDetailsService/graph"
	"github.com/romik1505/userDetailsService/internal/common"
	"github.com/romik1505/userDetailsService/internal/domain"
)

// Persons is the resolver for the persons field.
func (r *queryResolver) Persons(ctx context.Context, filter domain.ListPersonsFilter) (*common.PersonPagination, error) {
	pagination, err := r.PersonService.ListPersons(ctx, filter)
	if err != nil {
		return nil, fmt.Errorf("Persons: %v", err)
	}
	out := common.PersonPagination(pagination)
	return &out, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
